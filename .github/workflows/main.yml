# This is a basic workflow to help you get started with Actions

name: Deploy Node App via FTP

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [cpanel-host]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}


      - name: Create .env file
        run: |
          echo "NODE_ENV=${{ secrets.NODE_ENV}}" >> .env
          echo "PORT=${{ secrets.PORT}}" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI}}" >> .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY}}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET}}" >> .env
          echo "EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE}}" >> .env
          echo "EMAIL_PORT${{ secrets.EMAIL_PORT}}" >> .env
          echo "EMAIL_USERNAME${{ secrets.EMAIL_USERNAME}}" >> .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD}}" >> .env
          echo "EMAIL_FROM=${{ secrets.EMAIL_FROM}}" >> .env
          echo "NODE_VERSION}=${{ secrets.NODE_VERSION}}" >> .env


      # Runs a single command using the runners shell
      - name: install dependencies and run server
        run: npm install && npm run start
        env:
          CI: false

      # Runs a set of commands using the runners shell
      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@3.1.1
        with:
          ftp-server: ${{ secrets.FTP_SERVER}}
          ftp-username: ${{ secrets.FTP_USERNAME}}
          ftp-password: ${{ secrets.FTP_PASSWORD }}
